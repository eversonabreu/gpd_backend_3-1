// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace GPD.Backend.Infrastructure.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200325133104_UkPerfil")]
    partial class UkPerfil
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GPD.Backend.Domain.Entities.Estado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoUfIbge")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("character varying(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id")
                        .HasName("PkEstado");

                    b.HasIndex("CodigoUfIbge")
                        .IsUnique()
                        .HasName("UkEstadoCodigoUfIbge");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasName("UkEstadoNome");

                    b.HasIndex("Sigla")
                        .IsUnique()
                        .HasName("UkEstadoSigla");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("GPD.Backend.Domain.Entities.Funcionalidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Controlador")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id")
                        .HasName("PkFuncionalidade");

                    b.HasIndex("Controlador")
                        .IsUnique()
                        .HasName("UkFuncionalidade");

                    b.ToTable("Funcionalidade");
                });

            modelBuilder.Entity("GPD.Backend.Domain.Entities.Municipio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoMunicipioIbge")
                        .HasColumnType("integer");

                    b.Property<long>("IdEstado")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id")
                        .HasName("PkMunicipio");

                    b.HasIndex("CodigoMunicipioIbge")
                        .IsUnique()
                        .HasName("UkMunicipioCodigoMunicipioIbge");

                    b.HasIndex("IdEstado");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("GPD.Backend.Domain.Entities.Perfil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("PkPerfil");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("UkPerfil");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("GPD.Backend.Domain.Entities.PerfilUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdPerfil")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PkPerfilUsuario");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdPerfil", "IdUsuario")
                        .IsUnique()
                        .HasName("UkPerfilUsuario");

                    b.ToTable("PerfilUsuario");
                });

            modelBuilder.Entity("GPD.Backend.Domain.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Administrador")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PkUsuario");

                    b.HasIndex("Login")
                        .IsUnique()
                        .HasName("UkUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GPD.Backend.Domain.Entities.UsuarioFuncionalidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdFuncionalidade")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.Property<bool>("PermiteEditar")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermiteExcluir")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermiteInserir")
                        .HasColumnType("boolean");

                    b.HasKey("Id")
                        .HasName("PkUsuarioFuncionalidade");

                    b.HasIndex("IdFuncionalidade");

                    b.HasIndex("IdUsuario", "IdFuncionalidade")
                        .IsUnique()
                        .HasName("UkUsuarioFuncionalidade");

                    b.ToTable("UsuarioFuncionalidade");
                });

            modelBuilder.Entity("GPD.Backend.Domain.Entities.Municipio", b =>
                {
                    b.HasOne("GPD.Backend.Domain.Entities.Estado", "Estado")
                        .WithMany("Municipios")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FKMunicipioEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GPD.Backend.Domain.Entities.PerfilUsuario", b =>
                {
                    b.HasOne("GPD.Backend.Domain.Entities.Perfil", "Perfil")
                        .WithMany("PerfilUsuarios")
                        .HasForeignKey("IdPerfil")
                        .HasConstraintName("FKPerfilUsuarioPerfil")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GPD.Backend.Domain.Entities.Usuario", "Usuario")
                        .WithMany("PerfisUsuario")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FKPerfilUsuarioUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GPD.Backend.Domain.Entities.UsuarioFuncionalidade", b =>
                {
                    b.HasOne("GPD.Backend.Domain.Entities.Funcionalidade", "Funcionalidade")
                        .WithMany("UsuariosFuncionalidade")
                        .HasForeignKey("IdFuncionalidade")
                        .HasConstraintName("FKUsuarioFuncionalidadePerfil")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GPD.Backend.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioFuncionalidades")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FKUsuarioFuncionalidadeUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
